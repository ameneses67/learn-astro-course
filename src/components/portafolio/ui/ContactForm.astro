---
import Heading from "@components/Heading.astro";

import Alert from "./Alert.astro";
---

<div
	id="form-card"
	class="max-w-sm bg-base-200 p-8 space-y-8 rounded-lg shadow-lg"
>
	<Heading
		tagName="h3"
		size="h4"
		align="left"
	>
		¡Conectemos!
		<p slot="subtitle">
			Comunícate a continuación para consultas, cotizaciones o colaboración.
		</p>
	</Heading>
	<form
		id="contact-form"
		class="space-y-4"
	>
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Nombre</span>
			</div>
			<input
				type="text"
				name="name"
				placeholder="Primer nombre"
				class="input input-secondary input-bordered w-full rounded-3xl"
			/>
		</label>
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Correo electrónico</span>
			</div>
			<input
				type="email"
				name="email"
				placeholder="nombre@correo.com"
				class="input input-secondary input-bordered w-full rounded-3xl"
			/>
		</label>
		<button
			type="submit"
			class="btn btn-secondary btn-block rounded-3xl"
			>Contáctame</button
		>
	</form>
</div>

<script>
	const contactForm = document.querySelector(
		"#contact-form"
	) as HTMLFormElement;
	const formCard = document.querySelector("#form-card") as HTMLDivElement;

	contactForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(contactForm);
		const name = formData.get("name") as string;
		const email = formData.get("email") as string;

		if (!name || typeof name !== "string" || name.length < 2) {
			return updateMessage("El nombre es requerido", "error");
		}

		if (!email || typeof name !== "string" || !email.includes("@")) {
			return updateMessage("El correo electrónico es requerido", "error");
		}

		try {
			const resp = await fetch("http://localhost:3000/contacts", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					name,
					email,
				}),
			});
			if (!resp.ok) {
				throw new Error("No se pudo enviar tu información.");
			}
			contactForm.reset();
			return updateMessage("!Enviado con éxito!", "success");
		} catch (error) {
			if (error instanceof Error) {
				console.error(error.message);
			}
			return updateMessage(
				"Algo salió mal. Por favor intenta de nuevo.",
				"error"
			);
		}
	});

	const updateMessage = (message: string, type: "error" | "success") => {
		const alert = document.createElement("div");
		alert.setAttribute("id", "alert");
		alert.setAttribute("role", "alert");
		if (type === "error") {
			alert.classList.add("alert", "alert-error");
		} else {
			alert.classList.add("alert", "alert-success");
		}

		const alertMessage = document.createElement("span");
		alertMessage.textContent = message;

		if (type === "error") {
			alert.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
		} else {
			alert.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
		}
		alert.appendChild(alertMessage);

		formCard.appendChild(alert);

		setTimeout(() => {
			if (alert.parentNode) {
				alert.parentNode.removeChild(alert);
			}
		}, 3000);
	};
</script>
